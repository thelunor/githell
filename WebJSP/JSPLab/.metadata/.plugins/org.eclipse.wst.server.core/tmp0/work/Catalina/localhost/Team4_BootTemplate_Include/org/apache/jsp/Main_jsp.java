/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.26
 * Generated at: 2019-10-28 08:42:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"personal.css\">\r\n");
      out.write("<script>\r\n");
      out.write(" \r\n");
      out.write("      $(function() {\r\n");
      out.write("          let idpw_pattern = /^[a-z0-9_]{4,20}$/;\r\n");
      out.write("          let email_pattern = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("          let phone_pattern = /^\\d{3}-\\d{3,4}-\\d{4}$/;\r\n");
      out.write("          let id_check=false;\r\n");
      out.write("          let pw_check=false;\r\n");
      out.write("          let pwck_check=false;\r\n");
      out.write("          let name_check=false;\r\n");
      out.write("          let email_check=false;\r\n");
      out.write("          let phoneNumCheck=false;\r\n");
      out.write("          $(\"#userid\").keyup(function(){\r\n");
      out.write("              if(idpw_pattern.test($(this).val())!=true){\r\n");
      out.write("                  $(\"#alarm_id\").text(\"아이디가 형식에 맞지 않습니다.\");\r\n");
      out.write("                  id_check=false;\r\n");
      out.write("              }else{\r\n");
      out.write("                  $(\"#alarm_id\").text(\"아이디가 형식에 맞습니다.\");\r\n");
      out.write("                  id_check=true;\r\n");
      out.write("              }\r\n");
      out.write("          });\r\n");
      out.write("          $(\"#userpwd\").keyup(function(){\r\n");
      out.write("              if(idpw_pattern.test($(this).val())!=true){\r\n");
      out.write("                  $(\"#alarm_pwd\").text(\"비밀번호가 형식에 맞지 않습니다.\");\r\n");
      out.write("                  pw_check=false;\r\n");
      out.write("              }else{\r\n");
      out.write("                  $(\"#alarm_pwd\").text(\"비밀번호가 형식에 맞습니다.\");\r\n");
      out.write("                  pw_check=true;\r\n");
      out.write("              }\r\n");
      out.write("          });\r\n");
      out.write("          $(\"#userpwdCheck\").keyup(function(){\r\n");
      out.write("              if(idpw_pattern.test($(this).val())!=$(\"#userpwd\").val()){\r\n");
      out.write("                  $(\"#alarm_pwdCk\").text(\"입력한 비밀번호와 일치합니다.\");\r\n");
      out.write("                  pwck_check=false;\r\n");
      out.write("              }else{\r\n");
      out.write("                  $(\"#alarm_pwdCk\").text(\"입력한 비밀번호와 일치합니다.\");\r\n");
      out.write("                  pwck_check=true;\r\n");
      out.write("              }\r\n");
      out.write("          });\r\n");
      out.write("          $(\"#email\").keyup(function(){\r\n");
      out.write("              if(email_pattern.test($(this).val())!=true){\r\n");
      out.write("                  $(\"#alarm_email\").text(\"이메일주소가 형식에 맞지 않습니다.\");\r\n");
      out.write("                  email_check=false;\r\n");
      out.write("              }else{\r\n");
      out.write("                  $(\"#alarm_email\").text(\"이메일주소가 형식에 맞습니다.\");\r\n");
      out.write("                  email_check=true;\r\n");
      out.write("              }\r\n");
      out.write("          });\r\n");
      out.write("          $(\"#phoneNum\").keyup(function(){\r\n");
      out.write("              if(phone_pattern.test($(this).val())!=true){\r\n");
      out.write("                  $(\"#alarm_phoneNum\").text(\"휴대폰번호가 형식에 맞습니다.\");\r\n");
      out.write("                  phoneNumCheck=false;\r\n");
      out.write("              }else{\r\n");
      out.write("                  $(\"#alarm_phoneNum\").text(\"휴대폰번호가 형식에 맞습니다.\");\r\n");
      out.write("                  phoneNumCheck=true;\r\n");
      out.write("              }\r\n");
      out.write("          });\r\n");
      out.write("\r\n");
      out.write("          function addUser(event){\r\n");
      out.write("              let check = id_check && pw_check && pwck_check && name_check && email_check && phoneNumCheck;\r\n");
      out.write("              if(!check){ //false인 경우\r\n");
      out.write("                  alert(\"입력되지 않았습니다.\");\r\n");
      out.write("              }else{\r\n");
      out.write("                  check=true;\r\n");
      out.write("                  alert(\"회원가입 되었습니다.\");\r\n");
      out.write("                  $(\"#signInForm\").submit();\r\n");
      out.write("              }\r\n");
      out.write("          }\r\n");
      out.write("      });\r\n");
      out.write(" \r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- navbar -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Top.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\r\n");
      out.write("        <!--Indicators-->\r\n");
      out.write("        <ol class=\"carousel-indicators\">\r\n");
      out.write("            <li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\r\n");
      out.write("            <li data-target=\"#myCarousel\" data-slide-to=\"1\"></li>\r\n");
      out.write("            <li data-target=\"#myCarousel\" data-slide-to=\"2\"></li>\r\n");
      out.write("        </ol>\r\n");
      out.write("        <!--Wrapper for slides-->\r\n");
      out.write("        <div class=\"carousel-inner\" role=\"listbox\">\r\n");
      out.write("            <div class=\"item active\">\r\n");
      out.write("                <img src=\"./images/1.jpg\" alt=\"석림\" width=\"100%\" height=\"auto\">\r\n");
      out.write("                <div class=\"carousel-caption\">\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"item\">\r\n");
      out.write("                <img src=\"./images/2.jpg\" alt=\"운남\" width=\"100%\" height=\"auto\">\r\n");
      out.write("                <div class=\"carousel-caption\">\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"item\">\r\n");
      out.write("                <img src=\"./images/3.jpg\" alt=\"한강\" width=\"100%\" height=\"auto\">\r\n");
      out.write("                <div class=\"carousel-caption\">\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!--left and right controls-->\r\n");
      out.write("        <a class=\"left carousel-control\" href=\"#myCarousel\" role=\"button\" data-slide=\"prev\">\r\n");
      out.write("            <span class=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\"></span>\r\n");
      out.write("            <span class=\"sr-only\">Previous</span>\r\n");
      out.write("        </a>\r\n");
      out.write("        <a class=\"right carousel-control\" href=\"#myCarousel\" role=\"button\" data-slide=\"next\">\r\n");
      out.write("            <span class=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span>\r\n");
      out.write("            <span class=\"sr-only\">Next</span>\r\n");
      out.write("        </a>\r\n");
      out.write("    </div>\r\n");
      out.write("<!--navbar-->\r\n");
      out.write("<nav class=\"navbar navbar-default navbar-fixed-top\">\r\n");
      out.write("\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t<div class=\"navbar-header\">\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\t\tdata-target=\"#myNavbar\">\r\n");
      out.write("\t\t\t\t<span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\r\n");
      out.write("\t\t\t\t\tclass=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"#\">Drop-Traveler</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("\t\t\t\t<li><a href=\"Home.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"About.jsp\">About</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"Login.jsp\">Login</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"SignUp.jsp\">Sign Up</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\"><span class=\"glyphicon glyphicon-search\"></span></a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</nav>\r\n");
      out.write("<!-- about -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "About.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Footer -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
