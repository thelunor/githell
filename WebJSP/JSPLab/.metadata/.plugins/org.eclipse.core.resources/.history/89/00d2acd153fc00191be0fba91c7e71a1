<%@page import="java.util.HashMap"%>
<%@page import="kr.or.bit.Emp"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%
	Emp e = new Emp();
	e.setEmpno(2000);
	e.setEname("bituser");
	
	HashMap<String, String> hp = new HashMap<>();
	hp.put("data", "1004");
%>
<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title>Insert title here</title>
</head>
<body>
기존 방식: <%= e %><br>
기존 방식: <%= e.getEmpno() %><br>
기존 방식: <%= e.getEname() %><br>

<h3>EL(출력)</h3>
자바 객체 출력하기(객체에 대한 직접적인 접근 불가): ${e}<br>
자바 객체 속성값 출력: ${e.getEmpno()}<br>

1. JSTL(core): 변수 생성, 제어문(서버쪽에서)<br>
<c:set var="m" value="<%= e %>" />
JSTL을 사용하여 변수 m을 생성(m: e 객체의 주소값을 가지고 있다): ${m}<br>
<hr>
EL 출력: JSTL 변수값을 출력: ${m}<br>
EL 출력: JSTL 변수(가능하지만 권장 아님): ${m.getEmpno()}<br>
EL 출력: JSTL 변수(getter 구현되어 있다는 전제 > member field명): ${m.empno} > (자동으로 getter 호출)<br>
EL 출력: JSTL 변수(getter 구현되어 있다는 전제 > member field명): ${m.ename} > (자동으로 getter 호출)<br>
<hr>
<h3>EL & JSTL 사용하기</h3>
***** EL을 통해 java 객체에 대한 직접적인 접근은 불가능
</body>
</html>