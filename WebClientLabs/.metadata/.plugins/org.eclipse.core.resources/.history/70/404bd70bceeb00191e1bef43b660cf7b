<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title>Insert title here</title>
	<script type="text/javascript">
		/*  
			javascript(언어: Web: 코드해석의 주체: 웹 브라우저: 해석기(엔진): 라인단위 해석(컴파일(x)))
				객체지향언어: class 개념, 상속, 다형성...
			
			javascript 사용
			1. html content, attribute: 변경, 삭제, 추가 (동적으로)
			2. css 속성: 변경, 삭제, 추가 (동적으로)
			3. 유효성 검사: id 체크, 주민번호 검증
			4. 동적인 웹 페이지
			5. 전 세계적으로 1위
				- javascript >> framework(쉽게 사용할 수 있도록(50줄 -> 2줄))
				>> jquery.js >> angular.js(MVC)
				>> node.js(java 대체: back(DB 연결...): server)
				>> vue.js >> react.js >> 전 세계적으로 많음... .js
				-- 장점: 개발 시간의 단축, 유지보수
				-- 단점: 종속(lib) >> javascript 기본...
			6. 문법
				1) 대소문자 엄격하게 구분
				2) 종결자 ; 사용
				3) 타입 (var, let, const), 연산자, 제어문, 객체...
					참고) java와 코드가 유사
			7. 사용법(css와 동일: common.css(external))
				- in-line: 태그 안쪽에 표현(<p onclick="<script><script>"></p>)
				- internal: page 안에서(<head><script><script></head>... <body> 안쪽)
				- external: common.js(link 방식으로 사용)
		*/
		function call() { // public void call() {system.out.println('')}
			alert("internal");
		}
	</script>
	<script type="text/javascript" scr="script/common.js"></script>
</head>
<body>
	<h3>in-line</h3>
		<input type="button" value="inline" onclick="alert('inline')">
	<h3>internal</h3>
		<input type="button" value="internal" onclick="call()">
	<h3>external</h3>
		<input type="button" value="external" onclick="excall()">
</body>
</html>